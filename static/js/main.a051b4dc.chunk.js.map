{"version":3,"sources":["img/weather/rain.svg","img/weather/partly-cloudy-day.svg","img/weather/clear-day.svg","img/cloud.svg","img/dallas@3x.png","img/location-on-material.svg","img/weather/thunderstorm.svg","components/Background/Background.js","components/WeatherIcon/WeatherIcon.js","components/ToggleSwitch/ToggleSwitch.js","components/DateInfo/DateInfo.js","components/CurrentWeather/CurrentWeather.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","DisplayInfo","date","Date","getDate","day","getDay","month","getMonth","year","getFullYear","weekday","months","react_default","a","createElement","className","xmlns","width","height","viewBox","fill-rule","d","Component","weatherIcon","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","pulse","iconImage","icon","clearDay","rain","partlyCloudy","setPulse","src","ToggleSwitch","isOn","e","setState","onClick","ToggleSwitch_Switch","handleToggle","bind","Switch","classNames","join","ToggleSwitch_ToggleButton","ToggleButton","DateInfo","dayOfWeek","time","timestampToDay","GetWeather","isCelsius","currentTemp","currentWeather","currentIcon","currentWind","forecast","_this2","fetch","proxy","then","response","json","res","Math","round","currently","apparentTemperature","summary","windSpeed","daily","data","catch","err","console","log","prevProps","prevState","_this3","celsius","temperature","length","slice","toggleUnits","windUnits","id","dallas","alt","WeatherIcon_WeatherIcon","components_ToggleSwitch_ToggleSwitch","map","components_DateInfo_DateInfo","temperatureHigh","temperatureLow","CurrentWeather","Background_Background","CurrentWeather_GetWeather","App","cloud","components_CurrentWeather_CurrentWeather","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a051b4dc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/rain.9b393724.svg\";","module.exports = __webpack_public_path__ + \"static/media/partly-cloudy-day.7b077fa1.svg\";","module.exports = __webpack_public_path__ + \"static/media/clear-day.6c202f5d.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloud.e32e446d.svg\";","module.exports = __webpack_public_path__ + \"static/media/dallas@3x.6dd7ae06.png\";","module.exports = __webpack_public_path__ + \"static/media/location-on-material.aebb91ed.svg\";","module.exports = __webpack_public_path__ + \"static/media/thunderstorm.ab3021f6.svg\";","import React, { Component } from 'react';\nimport './Background.css';\nimport location from '../../img/location-on-material.svg';\n\nclass DisplayInfo extends Component {\n  render() {\n    const date = new Date().getDate();\n    const day = new Date().getDay();\n    const month = new Date().getMonth() + 1; \n    const year = new Date().getFullYear(); \n\n    var weekday= [];\n    weekday[0]=\"Sunday\";\n    weekday[1]=\"Monday\";\n    weekday[2]=\"Tuesday\";\n    weekday[3]=\"Wednesday\";\n    weekday[4]=\"Thursday\";\n    weekday[5]=\"Friday\";\n    weekday[6]=\"Saturday\";\n\n    var months = [];\n    months[1]=\"Jan\";\n    months[2]=\"Feb\";\n    months[3]=\"Mar\";\n    months[4]=\"Apr\";\n    months[5]=\"May\";\n    months[6]=\"June\";\n    months[7]=\"July\";\n    months[8]=\"Aug\";\n    months[9]=\"Sep\";\n    months[10]=\"Oct\";\n    months[11]=\"Nov\";\n    months[12]=\"Dec\";\n\n    return (\n      <div className=\"DisplayInfo\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"16\" viewBox=\"0 0 12 16\">\n        <path fill-rule=\"evenodd\" d=\"M6 7.304a1.892 1.892 0 0 0 1.62-.927c.168-.282.252-.591.252-.927A1.87 1.87 0 0 0 6 3.578c-.336 0-.645.084-.927.252a1.892 1.892 0 0 0-.927 1.62c0 .516.18.954.54 1.314.36.36.798.54 1.314.54zM6 .212c.96 0 1.842.234 2.646.702a5.283 5.283 0 0 1 1.89 1.89c.468.804.702 1.686.702 2.646 0 .732-.18 1.572-.54 2.52-.312.804-.744 1.674-1.296 2.61a34.43 34.43 0 0 1-1.566 2.322c-.408.564-.84 1.116-1.296 1.656l-.54.63-.54-.63a28.036 28.036 0 0 1-1.296-1.656 34.43 34.43 0 0 1-1.566-2.322c-.552-.936-.984-1.806-1.296-2.61-.36-.948-.54-1.788-.54-2.52 0-.96.234-1.842.702-2.646a5.283 5.283 0 0 1 1.89-1.89A5.166 5.166 0 0 1 6 .212z\"/>\n        </svg>\n\n        <h1>Dallas, TX</h1>\n        <h2>{weekday[day] + \", \" + months[month] + \" \" + date + \", \" + year}</h2>\n      </div>\n    );\n  }\n}\n\nexport default DisplayInfo;","import React, { Component } from 'react';\nimport './WeatherIcon.css';\nimport clearDay from '../../img/weather/clear-day.svg';\nimport partlyCloudy from '../../img/weather/partly-cloudy-day.svg';\nimport rain from '../../img/weather/rain.svg';\nimport thunderstorm from '../../img/weather/thunderstorm.svg';\n\n\nclass weatherIcon extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tpulse: null\n\t\t};\n\t}\n\n\tsetPulse(props) {\n\t\tlet isPulse = props;\n\t\tif (isPulse) {\n\t\t\treturn \"pulse\";\n\t\t} else {\n\t\t\treturn \"icon-size\";\n\t\t}\n\n\t}\n\n    render() {\n    \tlet iconImage = null;\n    \tlet pulse = this.props.pulse;\n\n    switch(this.props.icon){\n        case('clear-day'):\n            iconImage = clearDay;\n            break;\n        case('clear-night'):\n            iconImage = clearDay;\n            break;\n        case('rain'):\n            iconImage = rain;\n            break;\n        case('snow'):\n            iconImage = rain;\n            break;\n        case('sleet'):\n            iconImage = rain;\n            break;\n        case('wind'):\n            iconImage = rain;\n            break;\n        case('fog'):\n            iconImage = rain;\n            break;\n        case('cloudy'):\n            iconImage = partlyCloudy;\n            break;\n        case('partly-cloudy-day'):\n            iconImage = partlyCloudy;\n            break;\n        case('partly-cloudy-night'):\n            iconImage = partlyCloudy;\n            break;\n        default: \n            iconImage = null;\n            break;\n    }\n\n    \treturn (\n    \t\t<div className=\"weatherIcon\">\n    \t\t\t<img className={this.setPulse(pulse)} src={iconImage}/>\n    \t\t</div>\n\t\t);\n    }\n\n}\n\nexport default weatherIcon;","import React, { Component } from 'react';\nimport './ToggleSwitch.css';\n\nclass ToggleSwitch extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {isOn: true};\n\t}\n\n\thandleToggle(e) {\n\t\tthis.setState({isOn: !this.state.isOn});\n\t}\n\n\trender() {\n\t\tlet onClick = this.props.onClick;\n\t\tlet classNames = [\"toggle\"];\n\t\treturn (\n\t\t\t<div className={classNames} onClick={onClick}>\n\t\t\t\t<Switch\n\t\t\t\t\tisOn={this.state.isOn}\n\t\t\t\t\thandleToggle={this.handleToggle.bind(this)} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst Switch = function(props) {\n\tlet classNames = [\"switch\", (props.isOn) ? \"switch-right\" : \"switch-left\"].join(\" \");\n\treturn (\n\t\t<div className={classNames} onClick={props.handleToggle}>\n\t\t\t<h1>C&deg;</h1>\n\t\t\t<h2>F&deg;</h2>\n\t\t\t<ToggleButton isOn={props.isOn} />\n\t\t</div>\n\t);\n}\n\nconst ToggleButton = function(props) {\n\tlet classNames = [\"toggle-button\", (props.isOn) ? \"toggle-button-right\" : \"toggle-button-left\"].join(\" \");\n\treturn (\n\t\t<div className={classNames}>\n\t\t</div>)\n\t;\n}\n\nexport default ToggleSwitch;","import React, { Component } from 'react';\n\nclass DateInfo extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tdayOfWeek: null\n\t\t};\n\t}\n\n\ttimestampToDay (props) {\n\t\tlet days = ['Sun','Mon','Tue','Wed','Thu','Fri','Sat'];\n\t\tlet a = new Date(props*1000);\n\t\tthis.state.dayOfWeek = days[a.getDay()];\n\t\treturn this.state.dayOfWeek\n\t}\n\t\n  \trender() {\n  \tlet time = this.props.time;\n    return (\n        <h1>{this.timestampToDay(time)}</h1>\n    );\n  }\n}\n\nexport default DateInfo;","import React, { Component } from 'react';\nimport './CurrentWeather.css';\nimport Background from '../Background/Background';\nimport WeatherIcon from '../WeatherIcon/WeatherIcon';\nimport ToggleSwitch from '../ToggleSwitch/ToggleSwitch';\nimport DateInfo from '../DateInfo/DateInfo';\nimport dallas from '../../img/dallas@3x.png';\n\nclass GetWeather extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tisCelsius: false,\n\t\t\tcurrentTemp: null,\n\t\t\tcurrentWeather: null,\n\t\t\tcurrentIcon: null,\n\t\t\tcurrentWind: null,\n\t\t\tforecast: []\n\t\t};\n\t}\n\n\ttoggleUnits() {\n\t\tthis.setState({\n\t\t\tisCelsius: !this.state.isCelsius\n\t\t});\n\t}\n\n\n\tcomponentDidMount() {\n\t\tconst proxy = \"https://cors-anywhere.herokuapp.com/\"\n\t\tconst longitude = \"32.7767\"\n\t\tconst latitude = \"-96.7970\"\n\t\tconst darkSky = \"https://api.darksky.net/forecast/1df706274bc511d0782681ed01d839eb/\"\n\t\tvar celsius = ''\n\t\t\tif (this.state.isCelsius === true) {\n\t\t\t\tcelsius = \"?units=si\"\n\t\t\t} else {\n\t\t\t\tcelsius = \"\"\n\t\t\t}\n\n\t\tfetch(proxy + darkSky + longitude + \",\" + latitude)\n\t\t.then(response => response.json())\n\t\t.then(res => {\n\t\t\tthis.setState({\n\t\t\t\tcurrentTemp: Math.round(res.currently.apparentTemperature),\n\t\t\t\tcurrentWeather: res.currently.summary,\n\t\t\t\tcurrentIcon: res.currently.icon,\n\t\t\t\tcurrentWind: Math.round(res.currently.windSpeed),\n\t\t\t\tforecast: res.daily.data\n\t\t\t})\n\t\t})\n\t\t.catch(err => {\n\t\t\tconsole.log(err);\n\t\t});\n\t}\n\n\tcomponentDidUpdate(prevProps, prevState) {\n\t\tif (this.state.isCelsius !== prevState.isCelsius) {\n\t\t\tconst proxy = \"https://cors-anywhere.herokuapp.com/\"\n\t\t\tconst longitude = \"32.7767\"\n\t\t\tconst latitude = \"-96.7970\"\n\t\t\tconst darkSky = \"https://api.darksky.net/forecast/1df706274bc511d0782681ed01d839eb/\"\n\t\t\tvar celsius = ''\n\t\t\tif (this.state.isCelsius === true) {\n\t\t\t\tcelsius = \"?units=si\"\n\t\t\t} else {\n\t\t\t\tcelsius = \"\"\n\t\t\t}\n\n\t\t\tfetch(proxy + darkSky + longitude + \",\" + latitude + celsius)\n\t\t\t.then(response => response.json())\n\t\t\t.then(res => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tcurrentTemp: Math.round(res.currently.temperature),\n\t\t\t\t\tcurrentWeather: res.currently.summary,\n\t\t\t\t\tcurrentIcon: res.currently.icon,\n\t\t\t\t\tcurrentWind: Math.round(res.currently.windSpeed),\n\t\t\t\t\tforecast: res.daily.data\n\t\t\t\t})\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tconsole.log(err);\n\t\t\t});\n\n\t\t}\n\t}\n\n\trender() {\n\t\tif (!this.state.forecast.length)\n\t\t\treturn null;\n\n\t\tlet forecast = this.state.forecast.slice(0, 5)\n\t\tlet toggleUnits = this.toggleUnits.bind(this)\n\t\tlet windUnits = this.state.isCelsius ? 'kph' : 'mph'\n\n\t\treturn (\n\t\t\t<div className = \"MainContainer\">\n\t\t\t\t<img id=\"dallas\" src={dallas} alt=\"dallas\" />\n\t\t\t\t<div className=\"MainWeather\">\n\t\t\t\t\t<div className=\"temperature\">\n\t\t\t\t\t\t<h1>{this.state.currentTemp}</h1>\n\t\t\t\t\t\t<div className=\"degree\"></div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"icon\">\n\t\t\t\t\t\t<WeatherIcon icon={this.state.currentIcon}/>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"details\">\n\t\t\t\t\t\t<h2>{this.state.currentWeather}</h2>\n\t\t\t\t \t\t<h2>{this.state.currentWind + \" \" + windUnits}</h2>\n\t\t\t\t\t</div> \t\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t<div className=\"WeatherToggle\">\n       \t\t\t\t<ToggleSwitch onClick={toggleUnits} />\n       \t\t\t</div>\n\n       \t\t\t<div className=\"WeatherDisplay\">\n       \t\t\t\t<div className=\"forecastContainer\">\n\t\t\t\t\t{forecast.map(day => \n\t\t\t\t\t\t\t<div className=\"forecast\">\n\t\t\t\t\t\t\t\t<DateInfo time={day.time} />\n\t\t\t\t\t\t\t\t<WeatherIcon pulse={true} icon={day.icon} />\n\t\t\t\t\t\t\t\t<p className=\"tempHigh\">{Math.round(day.temperatureHigh)}</p>\n\t\t\t\t\t\t\t\t<p className=\"tempLow\">{Math.round(day.temperatureLow)}</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t);\n\t}\n}\n\n\nclass CurrentWeather extends Component {\n\trender () {\n\t\treturn (\n\t\t\t<div className=\"InnerWrapper\">\n\t\t        <Background />\n\t\t        <GetWeather />\n      \t\t</div>\n  \t\t);\n\t}\n}\n\nexport default CurrentWeather;\n","import React, { Component } from 'react';\nimport './App.css';\nimport CurrentWeather from './components/CurrentWeather/CurrentWeather';\nimport cloud from './img/cloud.svg';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        \n        <div className=\"OuterWrapper\">\n          <img id=\"cloud-one\" src={cloud} alt=\"cloud\" />\n          <img id=\"cloud-two\" src={cloud} alt=\"cloud\" />\n          <CurrentWeather />\n        </div>\n\n      </div>\n\n    );\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}